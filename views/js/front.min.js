'use strict'; var _typeof = 'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator ? function (a) { return typeof a } : function (a) { return a && 'function' == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? 'symbol' : typeof a }, _createClass = function () { function a(a, b) { for (var c, d = 0; d < b.length; d++)c = b[d], c.enumerable = c.enumerable || !1, c.configurable = !0, 'value' in c && (c.writable = !0), Object.defineProperty(a, c.key, c) } return function (b, c, d) { return c && a(b.prototype, c), d && a(b, d), b } }(); function _toConsumableArray(a) { if (Array.isArray(a)) { for (var b = 0, c = Array(a.length); b < a.length; b++)c[b] = a[b]; return c } return Array.from(a) } function _classCallCheck(a, b) { if (!(a instanceof b)) throw new TypeError('Cannot call a class as a function') } var MdgHomePush = function () { function a() { _classCallCheck(this, a), this.slidesContainer = '#mdghomepush-slides-wrap', this.$slidesContainer = document.getElementById('mdghomepush-slides-wrap'), this.initializeSlides(), this.pushesContainer = '#mdghomepush-pushes-wrap', this.$pushesContainer = document.getElementById('mdghomepush-pushes-wrap'), this.initializePushes() } return _createClass(a, [{ key: 'initializeSlides', value: function a() { 'undefined' != typeof this.$slidesContainer && null != this.$slidesContainer && (this.slidesOptions = { type: 'loop', perPage: 1, autoplay: 0 < mdgHomeSlide_break, waitForTransition: mdgHomeSlide_break, speed: mdgHomeSlide_transition, lazyLoad: 'nearby', cover: !0, height: mdgHomeSlide_height }, 1 === mdgHomeSlide_axe ? this.slidesOptions.direction = 'ttb' : 2 === mdgHomeSlide_axe ? (this.slidesOptions.type = 'fade', this.slidesOptions.rewind = !0) : void 0, this.renderSlides()) } }, { key: 'initializePushes', value: function a() { 'undefined' != typeof this.$pushesContainer && null != this.$pushesContainer && this.renderPushes() } }, { key: 'renderSlides', value: function a() { new Splide(this.slidesContainer, this.slidesOptions).mount() } }, { key: 'renderPushes', value: function b() { var a = this.$pushesContainer.querySelectorAll('li img');[].concat(_toConsumableArray(a)).forEach(function (a) { var b = new Image; b.src = a.dataset.src, b.onload = function () { a.src = a.dataset.src, _typeof(a.dataset.ismain) && 'true' == a.dataset.ismain && a.parentNode.parentNode.classList.add('initialized') } }) } }]), a }(); new MdgHomePush;
